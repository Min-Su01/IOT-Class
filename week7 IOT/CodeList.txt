//********************

//주기적으로 if블록 실행
void setup() {
  Serial.begin(115200);
  Serial.println();
}

void loop() {
  static unsigned long loopCnt = 0;    
 //지역 변수 loopCnt, nextMil을 선언했다. 지역 변수는 다음 실행 때 값을 잃어버리므로 값 유지를 위해 static을 사용한다
  static unsigned long nextMil = millis() + 1000;
//millis()는 가동 시간을 밀리초 단위로 알려 주는 아두이노 내장 함수다.
//nextMil은 1초 후를 나타내는 변수이므로 millis()+1000으로 초기화 한다.
  loopCnt++;  //loopCnt = loopCnt + 1;

  if(millis() > nextMil) {
    nextMil = millis() + 1000;
    Serial.println(loopCnt);
    loopCnt = 0;
  }
}

//******************

//함수 호출 방법
void setup() {
  Serial.begin(115200);
  Serial.println();

  //아래 a1,a2,a3는 인수(argument)임
  sum(a1,a2,a3);
  Serial.println(a3);
}
void loop() {
}

void sum(int a, int b, int&c) {
  c = a + b;
}

/*&’은 변수의 주소를 전달하는 역할을 한다. [프로그램7-3]은 sum()
함수 출력 시 인수로 지정한 변숫값을 함수에서 바꿔 출력하는 경우
를 보여준다*/


//********************

<header file>

#ifndef LedToggle_h
#define LedToggle_h

#include "Arduino.h"

class LedToggle {
	public:
		LedToggle(int pin);
		LedToggle(int pin, unsigned long delayTime);
		void toggle();	


	private:
		int _pin;
		bool _state;
		unsigned long _delayTime;
};

#endif

/*#ifndef는 #if not defined를 줄인 말이다. 처음 #include한 후부터는
 #ifndef가 거짓이 되므로 #include는 동작하지 않는다.
 클래스는 함수가 아니라 명령어이므로 끝에 세미콜론[;]을 붙인다.
*/

//********************

<cpp file>

#include "LedToggle.h"

LedToggle::LedToggle(int pin){
	_pin = pin;
	_state = false;
	_delayTime = 0;
	pinMode(_pin, OUTPUT);
	digitalWrite(_pin, LOW)
}

LedToggle::LedToggle(int pin, unsigned long delayTime){
	_pin = pin;
	_state = false;
	_delayTime = delayTime;
	pinMode(_pin, OUTPUT);
	digitalWrite(_pin, LOW)
}

void LedToggle::toggle() {
	
	if (_delayTime > 0){
		delay(_delayTime);
	}
	
	_state = !_state;
	digitalWrite(_pin,_state ? HIGH : LOW);
}


/*? class문 밖에서 클래스에 속한 메소드를 작성할 때는 이름 앞에
class_name::을 붙여 클래스의 소속을 표시한다.
? 범위 지정 연산자 (::) 사용을 제외하면 메소드 작성과 일반 함수
작성은 똑같다. */